#######################################################################################################################################################
# This file will be used to load the necessary settings for executing the genetic algorithm. In case of non-standard filling, an error will be thrown.#
# Each line that starts with a # will explain the data to be informed. 																				  #
# On the next line, the field name will be displayed followed by a colon, the field type, another colon and the field value.					      #
# Example: Name_Of_Field:int:10																														  #
# Do not change the field name or type.																												  # 
#######################################################################################################################################################
#
#Field Name: initialPopulation. Type: int. Description: enter your initial population size.
initialPopulation:int:200
#
#Field Name: mutationRate. Type: double. Description: enter mutation rate used by AG.
mutationRate:double:2.0
#
#Field Name: crossoverRate. Type: double. Description: enter crossover rate used by AG.
crossoverRate:double:80.0
#
#Field Name: iterations. Type: int. Description: enter the number of iterations that the AG will run.
iterations:int:20
#
#Field Name: generations. Type: int. Description: enter the number of generations the AG will run in each iteration.
generations:int:500
#
#Field Name: metric. Type: int. Description: enter the type of metric you want to use: 0 for Makespan, 1 for LoadBalance, 2 for FlowTime and 3 for CommunicationCost.
metric:int:0
#
#Field Name: mutation. Type: int. Description: enter the type of mutation you want to use: 0 for 1 Point or 1 for 2 Points.
#Explanation: 
#1 Point: select a processor and switch to another that was raffled.
#2 Points: selects two processors and swaps one for the other. If they are the same, we choose one to mater and raffle the second again until it is different from the first.
mutation:int:0
#
#Field Name: selection. Type: int. Description: enter the type of selection you want to use: 0 for Roulette and 1 for Tournament.
selection:int:0
#
#Field Name: tourForTournament. Type: int. Description: enter the number of tours that must be carried out for the tournament selection type (If the tournament type is roulette, the value entered here will not be used).
tourForTournament:int:3
#
#Field Name: totalProcessors. Type: int. Description: enter the number of processors that will run the tasks.
totalProcessors:int:3
#
#Field Name: printIterationsAndGenerations. Type: boolean. Description: enter if you want to print the iterations and generations of the AG to follow the processing.
printIterationsAndGenerations:boolean:true
#
#Field Name: testMode. Type: boolean. Description: enter if you want to print the information in debug mode: true for yes and false for no.
testMode:boolean:false
#
#Field Name: maximizationConstant. Type: double. Description: Enter 1 as the constant to be used to transform the problem into maximization or enter 0 when the problem is already of this type.
#Example: for the makespan, the lower its value, the better the individual. So, assuming that the makespan value of a chromosome is 16, we use the following formula to calculate the fitness: constant / 16 -> 1 / 16 = 0.0625. 
#A second chromosome with makespan equal to 20 has the following fitness: 1 / 20 = 0.05. The first chromosome has higher fitness, so it is a better solution than the second.
maximizationConstant:int:1
#
#Field Name: attemptSelectParentNotRepeated. Type: int. Description: enter the number of attempts that must be performed for the AG to select a non-repeating parent chromosome. If one is informed, the AG will use the first selected chromosome.
attemptSelectParentNotRepeated:int:1
#
#Field Name: stopGenerationIfFindBestSolution. Type: boolean. Description: enter if you want to stop the AG execution if it finds the best chromosome: true for yes and false for no.
stopGenerationIfFindBestSolution:boolean:false
#
#Field Name: allowApplyingMutationOnRepeatedChild. Type: boolean. Description: enter if you want to stop the AG execution if it finds the best chromosome: true for yes and false for no.
allowApplyingMutationOnRepeatedChild:boolean:false
#
#Field Name: printBestChromosomeOfGeneration. Type: boolean. Description: enter if you want to print the best chromosome of the generation.
printBestChromosomeOfGeneration:boolean:false
#
#Field Name: convergenceForTheBestSolution. Type: boolean. Description: enter if you want to consider as generation success only if the optimal solution is reached.
convergenceForTheBestSolution:boolean:false
#
#Field Name: taskGraphFileName. Type: string. Description: enter the name of the file containing the randomly generated graph in .stg format or enter -1 to get the default graph.
#taskGraphFileName:string:-1
taskGraphFileName:string:RandomTaskGraphWithoutCommunicationCosts.stg
#